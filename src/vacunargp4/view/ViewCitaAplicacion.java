/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vacunargp4.view;

import java.sql.Date;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import vacunargp4.control.*;
import vacunargp4.modelo.*;

/**
 *
 * @author kevin
 */
public class ViewCitaAplicacion extends javax.swing.JInternalFrame {
    
    CitaVacunacionData cvd;
    DosisData dd;
    PersonaData pd;
    private DefaultTableModel tabla;
    private CitaVacunacion citaElegida;
    private Dosis dosis1;
    

    /**
     * Creates new form ViewCitaAplicacion
     */
    public ViewCitaAplicacion(CitaVacunacionData cvd, DosisData dd, PersonaData pd) {
        initComponents();
        this.cvd = cvd;
        this.dd = dd;
        this.pd = pd;
        tabla = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        armarCabecera();
        llenarTabla();
        llenarDosis();
        jdcFecha.setDate(Date.valueOf(LocalDate.now()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCitas = new javax.swing.JTable();
        jdcFecha = new com.toedter.calendar.JDateChooser();
        jbBuscarFecha = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtNombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtApellido = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtDni = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtVacunatorio = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jtCantDosis = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jbLimpiar = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();
        jcbEstado = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jcbDosis = new javax.swing.JComboBox<>();

        jLabel1.setText("CITA - APLICAR DOSIS");

        jTableCitas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableCitas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCitasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableCitas);

        jbBuscarFecha.setText("BUSCAR");
        jbBuscarFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarFechaActionPerformed(evt);
            }
        });

        jLabel2.setText("DATOS DE LA CITA");

        jLabel3.setText("NOMBRE:");

        jtNombre.setEditable(false);

        jLabel4.setText("APELLIDO:");

        jtApellido.setEditable(false);

        jLabel5.setText("DNI:");

        jtDni.setEditable(false);

        jLabel6.setText("VACUNATORIO:");

        jtVacunatorio.setEditable(false);

        jLabel7.setText("ESTADO DE CITA:");

        jLabel8.setText("CANT-DOSIS:");

        jtCantDosis.setEditable(false);

        jButton1.setText("ACTUALIZAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jbLimpiar.setText("LIMPIAR");

        jbSalir.setText("SALIR");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jcbEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Espera", "Vencida", "Cancelada", "Cumplida" }));

        jLabel9.setText("DOSIS:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(467, 467, 467)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jdcFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jbBuscarFecha))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(465, 465, 465)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(jcbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(jcbDosis, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(jtCantDosis, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel4))
                                    .addComponent(jButton1))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(jtDni, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel6))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(116, 116, 116)
                                        .addComponent(jbLimpiar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jbSalir)))
                                .addGap(18, 18, 18)
                                .addComponent(jtVacunatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jdcFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscarFecha))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jtDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jtVacunatorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jtCantDosis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jcbDosis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jbLimpiar)
                    .addComponent(jbSalir))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbBuscarFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarFechaActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy");
        String fecha = formato.format(jdcFecha.getDate());
        LocalDate fechaCita = LocalDate.parse(fecha, DateTimeFormatter.ofPattern("dd-MM-yyyy"));
        llenarTablaFecha(fechaCita);
    }//GEN-LAST:event_jbBuscarFechaActionPerformed

    private void jTableCitasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCitasMouseClicked
        // TODO add your handling code here:
        int numCita = jTableCitas.getSelectedRow();
        
        if(numCita != -1){
            citaElegida = new CitaVacunacion();
            citaElegida.setIdCita((Integer)jTableCitas.getValueAt(numCita, 0));
            citaElegida.setPersona((Persona)jTableCitas.getValueAt(numCita, 1));
            citaElegida.setVacunatorio((Vacunatorio)jTableCitas.getValueAt(numCita, 2));
            citaElegida.setDosis((Dosis)jTableCitas.getValueAt(numCita, 3));
            citaElegida.setFecha((LocalDate)jTableCitas.getValueAt(numCita, 4));
            citaElegida.setHora((LocalTime)jTableCitas.getValueAt(numCita, 5));
            citaElegida.setEstado((String)jTableCitas.getValueAt(numCita, 6));
            citaElegida.setCantDosis((String)jTableCitas.getValueAt(numCita, 7));
            
            jtNombre.setText(citaElegida.getPersona().getNombre());
            jtApellido.setText(citaElegida.getPersona().getApellido());
            jtDni.setText(String.valueOf(citaElegida.getPersona().getDni()));
            jtVacunatorio.setText(citaElegida.getVacunatorio().getNombre());
            jtCantDosis.setText(citaElegida.getCantDosis());
        }
    }//GEN-LAST:event_jTableCitasMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String est = (String)jcbEstado.getSelectedItem();
        Dosis dosi = (Dosis)jcbDosis.getSelectedItem();
        
        switch((String)jcbEstado.getSelectedItem()){
            case "Espera":{
                JOptionPane.showMessageDialog(this, "Debe cambiar el estado de la cita.");
                break;
            }
            case "Vencida":{
                if(jcbDosis.getSelectedItem() != null){
                    JOptionPane.showMessageDialog(this, "No puede asignar dosis en este estado de cita.");
                }else{
                    cvd.actualizarCitaSinDosis(citaElegida.getIdCita(), est);
                }
                break;
            }
            case "Cancelada":{
                if(jcbDosis.getSelectedItem() != null){
                    JOptionPane.showMessageDialog(this, "No puede asignar dosis en este estado de cita.");
                }else{
                    cvd.actualizarCitaSinDosis(citaElegida.getIdCita(), est);
                }
                break;
            }
            case "Cumplida":{
                if(jcbDosis.getSelectedItem() != null && "Primera".equals(jtCantDosis.getText())){
                    cvd.actualizarCitaConDosis(citaElegida.getIdCita(), dosi);
                    dd.bajaDosis(dosi.getIdDosis());
                    LocalDate nueva = citaElegida.getFecha().plusDays(28);
                    CitaVacunacion newCita = new CitaVacunacion((Persona)citaElegida.getPersona(), (Vacunatorio)citaElegida.getVacunatorio(), nueva, (LocalTime)citaElegida.getHora(), "Espera", "Segunda");
                    cvd.crearCitaVacunacion(newCita);
                    JOptionPane.showMessageDialog(this, citaElegida.getPersona().getNombre() +" "+citaElegida.getPersona().getApellido()+" se aplico la dosis, cita cumplida");
                }else if(jcbDosis.getSelectedItem() != null && "Segunda".equals(jtCantDosis.getText())){
                    cvd.actualizarCitaConDosis(citaElegida.getIdCita(), dosi);
                    pd.bajaPersona(citaElegida.getPersona().getIdPersona());
                    dd.bajaDosis(dosi.getIdDosis());
                }else{
                    System.out.println("Seleccione una dosis");
                }
            }
        }
        llenarTabla();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    
    private void armarCabecera(){
        ArrayList<Object> columnas = new ArrayList<>();
        columnas.add("ID");
        columnas.add("PERSONA");
        columnas.add("VACUNATORIO");
        columnas.add("DOSIS");
        columnas.add("FECHA");
        columnas.add("HORA");
        columnas.add("ESTADO");
        columnas.add("CANT-DOSIS");
        for(Object it:columnas){
            tabla.addColumn(it);
        }
        jTableCitas.setModel(tabla);
    }
    
    private void llenarTabla(){
        borrarFilas();
        for(CitaVacunacion a:cvd.traerCitaEspera()){
            tabla.addRow(new Object[]{a.getIdCita(), a.getPersona(), a.getVacunatorio(), a.getDosis(), a.getFecha(), a.getHora(), a.getEstado(), a.getCantDosis()});
        }
    }
    
    private void llenarTablaFecha(LocalDate fecha){
        borrarFilas();
        for(CitaVacunacion a:cvd.traerCitaEsperaFecha(fecha)){
            tabla.addRow(new Object[]{a.getIdCita(), a.getPersona(), a.getVacunatorio(), a.getDosis(), a.getFecha(), a.getHora(), a.getEstado(), a.getCantDosis()});
        }
    }
    
    private void borrarFilas(){
        int a = tabla.getRowCount()-1;
        for(int i = a; i>=0; i--){
            tabla.removeRow(i);
        }
    }
    
    private void llenarDosis(){
        jcbDosis.removeAllItems();
        jcbDosis.addItem(dosis1);
        for(Dosis d:dd.traerDosisEstado(true)){
            jcbDosis.addItem(d);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTableCitas;
    private javax.swing.JButton jbBuscarFecha;
    private javax.swing.JButton jbLimpiar;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<Dosis> jcbDosis;
    private javax.swing.JComboBox<String> jcbEstado;
    private com.toedter.calendar.JDateChooser jdcFecha;
    private javax.swing.JTextField jtApellido;
    private javax.swing.JTextField jtCantDosis;
    private javax.swing.JTextField jtDni;
    private javax.swing.JTextField jtNombre;
    private javax.swing.JTextField jtVacunatorio;
    // End of variables declaration//GEN-END:variables
}
